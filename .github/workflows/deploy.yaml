name: Create, publish and deploy a Docker image

on:
  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: latest

jobs:
  check:
    name: Check code style
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: pip

      - name: Install packages
        run: pip install -r dev-requirements.txt

      - name: Check code style
        run: |
          isort --check --diff userbot
          black --check --diff userbot

  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ env.IMAGE_TAG }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  run:
    name: Run newest version on server
    runs-on: ubuntu-latest
    needs:
      - build
    environment:
      name: production

    steps:
      - name: Get docker-compose.prod.yaml file
        run: wget -q "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/raw/$GITHUB_REF_NAME/docker-compose.prod.yaml"

      - name: Deploy Docker app
        env:
          DOCKER_HOST: ssh://github@server.evgfilim1.me
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
          ENV_FILE_CONTENT: ${{ secrets.ENV_FILE_CONTENT }}
          COMPOSE_CMD: docker-compose -f docker-compose.prod.yaml -p userbot
          COMPOSE_PARAMIKO_SSH: "1"
        run: |
          set -eu
          mkdir ~/.ssh/
          echo "$SSH_PRIVATE_KEY" >~/.ssh/id_ed25519 && chmod 600 ~/.ssh/id_ed25519
          echo "$SSH_PUBLIC_KEY" >~/.ssh/known_hosts && chmod 600 ~/.ssh/known_hosts
          echo "$ENV_FILE_CONTENT" >.env && chmod 400 .env
          eval $COMPOSE_CMD pull
          eval $COMPOSE_CMD stop main
          eval $COMPOSE_CMD run --rm --entrypoint /usr/bin/env main python3.10 -m userbot.migrations
          eval $COMPOSE_CMD up -d main
